package fr.ibformation.ihm;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.Border;

public class WelcomeScreen extends JFrame {
	
	private Dimension dim = new Dimension(160, 50);
	GridLayout gridLayout = new GridLayout(2,1);
	GridBagLayout gridBag = new GridBagLayout();

	public WelcomeScreen() {
		initContentPain();
		initFenetre();
	}

	private void initFenetre() {
		this.setSize(600, 400);
		this.setLocationRelativeTo(null);
		this.setTitle("Puissance 4");
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setVisible(true);
		
	}

	private void initContentPain() {

		JPanel container = new JPanel();
		container.setBackground(Color.WHITE);
		container.setLayout(gridBag);
		this.setContentPane(container);
		
		JPanel panelBouton = new JPanel();
		panelBouton.setLayout(gridLayout);
		panelBouton.setBackground(Color.WHITE);
		gridLayout.setVgap(6);
		gridLayout.setHgap(6);
		
		JPanel panelImage = new JPanel();
		panelImage.setBackground(Color.WHITE);
		//add image
		try {
			BufferedImage image = ImageIO.read(new File("D:/Images/Connect_Four.gif"));
			Icon icon = new ImageIcon(image);
			JLabel label = new JLabel(icon);
			panelImage.add(label);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		
			ActionListener listen=new ActionListener(){
			
			public void actionPerformed(ActionEvent e){
				
				    JFrame fenetreJoueur = new Joueur();
				    // On cache la fenetre d'acceuil après le click
				    setVisible(false);
				    fenetreJoueur.setVisible(true);	
				    fenetreJoueur.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
				}
			};
		
		//création du bouton
		//JButton bouton1 = new JButton("Let's go");
		
		//ajout de l'écouteur
		//bouton1.addActionListener(listen);
		
		JButton boutonNewGame = new JButton("Nouvelle partie");
		boutonNewGame.addActionListener(listen);
		JButton boutonLoadGame = new JButton("Charger partie");
		
		boutonNewGame.setBackground(new Color(21, 215, 152));
		boutonNewGame.setForeground(Color.WHITE);
		boutonNewGame.setPreferredSize(dim);
		boutonNewGame.setBorder(new RoundedBorder(30));
		boutonNewGame.setFont(new Font("Arial", Font.PLAIN, 15));
	
		boutonLoadGame.setBackground(new Color(21, 215, 152));
		boutonLoadGame.setForeground(Color.WHITE);
		boutonLoadGame.setPreferredSize(dim);
		boutonLoadGame.setBorder(new RoundedBorder(30));
		boutonLoadGame.setFont(new Font("Arial", Font.PLAIN, 15));
		
		panelBouton.add(boutonNewGame);
		panelBouton.add(boutonLoadGame);
		
		container.add(panelImage);
		container.add(panelBouton);
		
		

	}
	
	private class RoundedBorder implements Border {

	    private int radius;


	    RoundedBorder(int radius) {
	        this.radius = radius;
	    }


	    public Insets getBorderInsets(Component c) {
	        return new Insets(this.radius+1, this.radius+1, this.radius+2, this.radius);
	    }


	    public boolean isBorderOpaque() {
	        return true;
	    }


	    public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
	        g.drawRoundRect(x, y, width-1, height-1, radius, radius);
	    }


	}
}
